#!/usr/bin/env bash

set -eo pipefail
[[ $DEBUG ]] && set -x

repo() {
  declare cmd="repo"
  [[ "$1" == "$cmd" ]] && shift 1

  repo-"$@"
}

repo-create() {
  declare cmd="create"
  [[ "$1" == "$cmd" ]] && shift 1

  REPO_NAME="$1"
  REPO_PATH="$GIT_REPO_ROOT/$REPO_NAME.git"

  echo "$PREFIX Creating repository $REPO_NAME on swarm"

  if [ -z "$REPO_NAME" ]; then
    echo "$PREFIX No repository name specified"
    echo "$INDENT Usage:"
    echo "$INDENT swarmlet repo create <name>"
    exit 1
  fi

  git init --bare "$REPO_PATH"
  cp -R "$SWARMLET_HOOKS"/* "$REPO_PATH"/hooks/
  chown -R "$GIT_USER":"$GIT_USER" "$REPO_PATH"

  echo "$INDENT Created remote repository $REPO_NAME"
}

repo-rm() {
  declare cmd="rm"
  [[ "$1" == "$cmd" ]] && shift 1

  REPO_NAME="$1"
  REPO_PATH="$GIT_REPO_ROOT/$REPO_NAME.git"

  echo "$PREFIX Removing repository $REPO_NAME from swarm"
  echo "$INDENT [NOTE] This won't remove your stack"

  if [ -z "$REPO_NAME" ]; then
    echo "$PREFIX No repository name specified"
    echo "$INDENT Usage:"
    echo "$INDENT swarmlet repo remove <name>"
    exit 1
  fi

  sudo rm -rf "$REPO_PATH"
  echo "$INDENT Repository removed from swarm"
}

repo-ls() {
  declare cmd="ls"
  [[ "$1" == "$cmd" ]] && shift 1

  echo "$PREFIX Listing repositories"

  for REPO in "$GIT_REPO_ROOT"/*; do
    REPO_BASE=$(basename "$REPO")
    REPO_NAME=${REPO_BASE/.git/}
    if [ -d "$GIT_DATA_ROOT/$REPO_NAME" ]; then
      DEPLOYED="Deployed"
    else
      DEPLOYED="Created"
    fi
    echo "$INDENT $(basename "$REPO") - Status: $DEPLOYED"
  done
}

"$@"
